-- Protection de la mémoire (cache)
if not memorystats then 
    memorystats = {}
    memorystats.cache = function(a) end
    memorystats.restore = function(a) end 
end
for _, v in pairs({
    "Internal", "HttpCache", "Instances", "Signals", "Script", 
    "PhysicsCollision", "PhysicsParts", "GraphicsSolidModels", 
    "GraphicsMeshParts", "GraphicsParticles", "GraphicsParts", 
    "GraphicsSpatialHash", "GraphicsTerrain", "GraphicsTexture", 
    "GraphicsTextureCharacter", "Sounds", "StreamingSounds", 
    "TerrainVoxels", "Gui", "Animation", "Navigation", "GeometryCSG"
}) do
    memorystats.cache(v)
end

-- Services Roblox avec cloneref
local CoreGui = cloneref(game:GetService("CoreGui"))
local Players = cloneref(game:GetService("Players"))
local RunService = cloneref(game:GetService("RunService"))
local UserInputService = cloneref(game:GetService("UserInputService"))
local HttpService = cloneref(game:GetService("HttpService"))
local TweenService = cloneref(game:GetService("TweenService"))
local SoundService = cloneref(game:GetService("SoundService"))

-- Vérification du LocalPlayer
local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
    error("Script client not found")
    game:Kick("Erreur : Joueur local non détecté. Veuillez relancer le jeu.")
    return
end

-- Initialisation sécurisée de la souris
local function getMouseSafely()
    local success, result = pcall(function() return LocalPlayer:GetMouse() end)
    return success and result or nil
end
local Mouse = getMouseSafely()
if not Mouse then
    LocalPlayer:GetPropertyChangedSignal("Mouse"):Wait()
    Mouse = LocalPlayer:GetMouse()
end
local Camera = cloneref(game:GetService("Workspace")).CurrentCamera

-- Bibliothèque UI
local BlitzXHub = {}

-- Thèmes
local Themes = {
    Dark = {
        Background = Color3.fromRGB(20, 20, 20),
        Accent = Color3.fromRGB(50, 50, 50),
        Highlight = Color3.fromRGB(100, 100, 100), -- Gris clair au lieu de bleu
        Text = Color3.fromRGB(255, 255, 255),
        Section = Color3.fromRGB(30, 30, 30),
        Header = Color3.fromRGB(15, 15, 15),
        Border = Color3.fromRGB(80, 80, 80),
    },
    Synapse = {
        Background = Color3.fromRGB(10, 10, 15),
        Accent = Color3.fromRGB(40, 40, 50),
        Highlight = Color3.fromRGB(80, 120, 120), -- Cyan subtil
        Text = Color3.fromRGB(200, 200, 200),
        Section = Color3.fromRGB(25, 25, 35),
        Header = Color3.fromRGB(5, 5, 10),
        Border = Color3.fromRGB(60, 80, 80),
    }
}

-- Fonction pour créer une fenêtre
function BlitzXHub:CreateWindow(windowName, gameName, introText, iconAssetId, themesEnabled, configFolder, theme)
    local window = {}
    window.Name = windowName or "BlitzX Hub"
    window.GameName = gameName or "Unknown Game"
    window.ThemesEnabled = themesEnabled or false
    window.ConfigFolder = configFolder or "BlitzXConfigs"
    window.Theme = Themes[theme] or Themes.Synapse
    window.Visible = true
    window.Connections = {}
    window.Config = {}

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BlitzXHub_" .. windowName
    screenGui.Parent = CoreGui
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.DisplayOrder = 1000

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 600, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    mainFrame.BackgroundColor3 = window.Theme.Background
    mainFrame.BackgroundTransparency = 0.2
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    mainFrame.ClipsDescendants = true

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = mainFrame

    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 1
    stroke.Color = window.Theme.Border
    stroke.Transparency = 0.5
    stroke.Parent = mainFrame

    mainFrame.Size = UDim2.new(0, 0, 0, 0)
    TweenService:Create(mainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Bounce), {Size = UDim2.new(0, 600, 0, 400), BackgroundTransparency = 0.2}):Play()

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -40, 0, 30)
    titleLabel.BackgroundColor3 = window.Theme.Header
    titleLabel.Text = "BlitzXHub | " .. windowName .. " | " .. gameName
    titleLabel.TextColor3 = window.Theme.Text
    titleLabel.TextSize = 16
    titleLabel.Font = Enum.Font.Code
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = mainFrame

    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 4)
    titleCorner.Parent = titleLabel

    local watermark = Instance.new("TextLabel")
    watermark.Size = UDim2.new(1, 0, 0, 20)
    watermark.Position = UDim2.new(0, 0, 1, -20)
    watermark.BackgroundTransparency = 1
    watermark.Text = "BlitzXHub v1.0"
    watermark.TextColor3 = window.Theme.Text
    watermark.TextSize = 12
    watermark.Font = Enum.Font.Code
    watermark.TextTransparency = 0.7
    watermark.Parent = mainFrame

    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 24, 0, 24)
    closeButton.Position = UDim2.new(1, -30, 0, 3)
    closeButton.BackgroundColor3 = window.Theme.Border
    closeButton.Text = "X"
    closeButton.TextColor3 = window.Theme.Text
    closeButton.TextSize = 14
    closeButton.Font = Enum.Font.Code
    closeButton.Parent = mainFrame

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 4)
    closeCorner.Parent = closeButton

    local tabContainer = Instance.new("ScrollingFrame")
    tabContainer.Size = UDim2.new(0, 120, 1, -50)
    tabContainer.Position = UDim2.new(0, 0, 0, 30)
    tabContainer.BackgroundTransparency = 1
    tabContainer.ScrollBarThickness = 3
    tabContainer.ScrollBarImageColor3 = window.Theme.Highlight
    tabContainer.Parent = mainFrame

    local tabListLayout = Instance.new("UIListLayout")
    tabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabListLayout.Padding = UDim.new(0, 3)
    tabListLayout.Parent = tabContainer

    local tabPadding = Instance.new("UIPadding")
    tabPadding.PaddingTop = UDim.new(0, 5)
    tabPadding.PaddingLeft = UDim.new(0, 5)
    tabPadding.Parent = tabContainer

    local contentContainer = Instance.new("Frame")
    contentContainer.Size = UDim2.new(1, -120, 1, -50)
    contentContainer.Position = UDim2.new(0, 120, 0, 30)
    contentContainer.BackgroundTransparency = 1
    contentContainer.Parent = mainFrame
    contentContainer.ClipsDescendants = true

    local resizeHandle = Instance.new("Frame")
    resizeHandle.Size = UDim2.new(0, 10, 0, 10)
    resizeHandle.Position = UDim2.new(1, -10, 1, -10)
    resizeHandle.BackgroundColor3 = window.Theme.Highlight
    resizeHandle.Parent = mainFrame

    local resizeCorner = Instance.new("UICorner")
    resizeCorner.CornerRadius = UDim.new(0, 4)
    resizeCorner.Parent = resizeHandle

    window.ScreenGui = screenGui
    window.MainFrame = mainFrame
    window.TabContainer = tabContainer
    window.ContentContainer = contentContainer
    window.Tabs = {}

    local dragging, dragInput, dragStart, startPos
    local function updateInput(input)
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    table.insert(window.Connections, titleLabel.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end))

    table.insert(window.Connections, titleLabel.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end))

    table.insert(window.Connections, UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateInput(input)
        end
    end))

    local resizing, resizeStart, resizeStartSize
    table.insert(window.Connections, resizeHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            resizing = true
            resizeStart = input.Position
            resizeStartSize = mainFrame.Size
        end
    end))

    table.insert(window.Connections, resizeHandle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            resizing = false
        end
    end))

    table.insert(window.Connections, UserInputService.InputChanged:Connect(function(input)
        if resizing and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - resizeStart
            local newWidth = math.clamp(resizeStartSize.X.Offset + delta.X, 400, 1000)
            local newHeight = math.clamp(resizeStartSize.Y.Offset + delta.Y, 300, 800)
            mainFrame.Size = UDim2.new(0, newWidth, 0, newHeight)
        end
    end))

    table.insert(window.Connections, closeButton.MouseButton1Click:Connect(function()
        window.Visible = not window.Visible
        TweenService:Create(mainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Bounce), {Size = window.Visible and UDim2.new(0, mainFrame.Size.X.Offset, 0, mainFrame.Size.Y.Offset) or UDim2.new(0, 0, 0, 0), BackgroundTransparency = window.Visible and 0.2 or 1}):Play()
        mainFrame.Visible = window.Visible
    end))

    table.insert(window.Connections, UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.Insert then
            window.Visible = not window.Visible
            TweenService:Create(mainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Bounce), {Size = window.Visible and UDim2.new(0, mainFrame.Size.X.Offset, 0, mainFrame.Size.Y.Offset) or UDim2.new(0, 0, 0, 0), BackgroundTransparency = window.Visible and 0.2 or 1}):Play()
            mainFrame.Visible = window.Visible
        end
    end))

    local function saveConfig()
        local config = {
            WindowPosition = {mainFrame.Position.X.Scale, mainFrame.Position.X.Offset, mainFrame.Position.Y.Scale, mainFrame.Position.Y.Offset},
            WindowSize = {mainFrame.Size.X.Offset, mainFrame.Size.Y.Offset},
            Theme = theme,
            Settings = window.Config
        }
        local success, encoded = pcall(HttpService.JSONEncode, HttpService, config)
        if success then
            pcall(writefile, window.ConfigFolder .. "/config.json", encoded)
        end
    end

    local function loadConfig()
        if isfile(window.ConfigFolder .. "/config.json") then
            local success, config = pcall(HttpService.JSONDecode, HttpService, readfile(window.ConfigFolder .. "/config.json"))
            if success then
                if config.WindowPosition then
                    mainFrame.Position = UDim2.new(config.WindowPosition[1], config.WindowPosition[2], config.WindowPosition[3], config.WindowPosition[4])
                end
                if config.WindowSize then
                    mainFrame.Size = UDim2.new(0, config.WindowSize[1], 0, config.WindowSize[2])
                end
                if config.Theme and Themes[config.Theme] then
                    window.Theme = Themes[config.Theme]
                    mainFrame.BackgroundColor3 = window.Theme.Background
                    contentContainer.BackgroundColor3 = window.Theme.Background
                    tabContainer.BackgroundColor3 = window.Theme.Background
                    titleLabel.BackgroundColor3 = window.Theme.Header
                    titleLabel.TextColor3 = window.Theme.Text
                    closeButton.BackgroundColor3 = window.Theme.Border
                    closeButton.TextColor3 = window.Theme.Text
                    watermark.TextColor3 = window.Theme.Text
                end
                window.Config = config.Settings or {}
            end
        end
    end

    if not isfolder(window.ConfigFolder) then
        pcall(makefolder, window.ConfigFolder)
    end
    loadConfig()

    table.insert(window.Connections, mainFrame:GetPropertyChangedSignal("Position"):Connect(saveConfig))
    table.insert(window.Connections, mainFrame:GetPropertyChangedSignal("Size"):Connect(saveConfig))

    function window:Destroy()
        for _, connection in ipairs(window.Connections) do
            connection:Disconnect()
        end
        screenGui:Destroy()
    end

    return window
end

-- Fonction pour ajouter un onglet
function BlitzXHub:AddTab(window, tabName, isDefault, iconAssetId, iconSize, iconPosition)
    local tab = {}
    tab.Name = tabName or "Tab"
    tab.IsDefault = isDefault or false
    tab.Connections = {}

    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1, -10, 0, 30)
    tabButton.BackgroundColor3 = window.Theme.Accent
    tabButton.Text = tabName
    tabButton.TextColor3 = window.Theme.Text
    tabButton.TextSize = 14
    tabButton.Font = Enum.Font.Code
    tabButton.Parent = window.TabContainer

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = tabButton

    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 1
    stroke.Color = window.Theme.Border
    stroke.Transparency = 0.6
    stroke.Parent = tabButton

    if iconAssetId then
        local icon = Instance.new("ImageLabel")
        icon.Size = UDim2.new(0, iconSize and iconSize.X or 20, 0, iconSize and iconSize.Y or 20)
        icon.Position = UDim2.new(0, iconPosition and iconPosition.X or 5, 0, iconPosition and iconPosition.Y or 5)
        icon.BackgroundTransparency = 1
        icon.Image = iconAssetId
        icon.Parent = tabButton
        tabButton.TextXAlignment = Enum.TextXAlignment.Right
    end

    local tabContent = Instance.new("Frame")
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.Parent = window.ContentContainer
    tabContent.Visible = isDefault

    local contentLayout = Instance.new("UIListLayout")
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 5)
    contentLayout.Parent = tabContent

    tab.Button = tabButton
    tab.Content = tabContent
    table.insert(window.Tabs, tab)

    table.insert(tab.Connections, tabButton.MouseEnter:Connect(function()
        TweenService:Create(tabButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = window.Theme.Highlight, TextColor3 = window.Theme.Text, Size = UDim2.new(1, -8, 0, 32)}):Play()
        TweenService:Create(stroke, TweenInfo.new(0.2), {Transparency = 0.3}):Play()
    end))
    table.insert(tab.Connections, tabButton.MouseLeave:Connect(function()
        if not tabContent.Visible then
            TweenService:Create(tabButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = window.Theme.Accent, TextColor3 = window.Theme.Text, Size = UDim2.new(1, -10, 0, 30)}):Play()
            TweenService:Create(stroke, TweenInfo.new(0.2), {Transparency = 0.6}):Play()
        end
    end))

    table.insert(tab.Connections, tabButton.MouseButton1Click:Connect(function()
        for _, otherTab in ipairs(window.Tabs) do
            otherTab.Content.Visible = false
            TweenService:Create(otherTab.Button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = window.Theme.Accent, TextColor3 = window.Theme.Text, Size = UDim2.new(1, -10, 0, 30)}):Play()
            TweenService:Create(otherTab.Button:FindFirstChildOfClass("UIStroke"), TweenInfo.new(0.2), {Transparency = 0.6}):Play()
        end
        tabContent.Visible = true
        TweenService:Create(tabButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = window.Theme.Highlight, TextColor3 = window.Theme.Text, Size = UDim2.new(1, -8, 0, 32)}):Play()
        TweenService:Create(stroke, TweenInfo.new(0.2), {Transparency = 0.3}):Play()
    end))

    return tab
end

-- Fonction pour créer une section
function BlitzXHub:CreateSection(tab, sectionName, window)
    local section = {}
    section.Name = sectionName or "Section"

    local sectionFrame = Instance.new("Frame")
    sectionFrame.Size = UDim2.new(1, -10, 0, 0)
    sectionFrame.Position = UDim2.new(0, 5, 0, 0)
    sectionFrame.BackgroundColor3 = window.Theme.Section
    sectionFrame.Parent = tab.Content
    sectionFrame.AutomaticSize = Enum.AutomaticSize.Y

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = sectionFrame

    local sectionLayout = Instance.new("UIListLayout")
    sectionLayout.SortOrder = Enum.SortOrder.LayoutOrder
    sectionLayout.Padding = UDim.new(0, 4)
    sectionLayout.Parent = sectionFrame

    local sectionPadding = Instance.new("UIPadding")
    sectionPadding.PaddingTop = UDim.new(0, 4)
    sectionPadding.PaddingLeft = UDim.new(0, 4)
    sectionPadding.PaddingRight = UDim.new(0, 4)
    sectionPadding.Parent = sectionFrame

    local sectionLabel = Instance.new("TextLabel")
    sectionLabel.Size = UDim2.new(1, 0, 0, 25)
    sectionLabel.BackgroundColor3 = window.Theme.Header
    sectionLabel.Text = "BlitzXHub | " .. sectionName
    sectionLabel.TextColor3 = window.Theme.Text
    sectionLabel.TextSize = 14
    sectionLabel.Font = Enum.Font.Code
    sectionLabel.Parent = sectionFrame

    local labelCorner = Instance.new("UICorner")
    labelCorner.CornerRadius = UDim.new(0, 4)
    labelCorner.Parent = sectionLabel

    section.Frame = sectionFrame
    return section
end

-- Fonction pour créer un bouton
function BlitzXHub:CreateButton(section, buttonName, callback, tooltip, window)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 30)
    button.BackgroundColor3 = window.Theme.Accent
    button.Text = "BlitzXHub | " .. buttonName
    button.TextColor3 = window.Theme.Text
    button.TextSize = 14
    button.Font = Enum.Font.Code
    button.Parent = section.Frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = button

    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 1
    stroke.Color = window.Theme.Border
    stroke.Transparency = 0.6
    stroke.Parent = button

    local rippleFrame = Instance.new("Frame")
    rippleFrame.Size = UDim2.new(0, 0, 0, 0)
    rippleFrame.BackgroundColor3 = window.Theme.Highlight
    rippleFrame.BackgroundTransparency = 0.5
    rippleFrame.ClipsDescendants = true
    rippleFrame.Parent = button

    local rippleCorner = Instance.new("UICorner")
    rippleCorner.CornerRadius = UDim.new(1, 0)
    rippleCorner.Parent = rippleFrame

    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = window.Theme.Highlight, Size = UDim2.new(1, -8, 0, 32)}):Play()
        TweenService:Create(stroke, TweenInfo.new(0.2), {Transparency = 0.3}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = window.Theme.Accent, Size = UDim2.new(1, -10, 0, 30)}):Play()
        TweenService:Create(stroke, TweenInfo.new(0.2), {Transparency = 0.6}):Play()
    end)
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {Size = UDim2.new(1, -12, 0, 28)}):Play()
    end)
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {Size = UDim2.new(1, -8, 0, 32)}):Play()
    end)

    button.MouseButton1Click:Connect(function()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://200427996"
        sound.Volume = 0.5
        sound.Parent = button
        sound:Play()
        task.spawn(function()
            task.wait(1)
            sound:Destroy()
        end)

        local mousePos = UserInputService:GetMouseLocation()
        local relPos = mousePos - button.AbsolutePosition
        rippleFrame.Position = UDim2.new(0, relPos.X, 0, relPos.Y)
        rippleFrame.Size = UDim2.new(0, 0, 0, 0)
        TweenService:Create(rippleFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 100, 0, 100), BackgroundTransparency = 1}):Play()
        if callback then
            pcall(callback)
        end
    end)

    if tooltip then
        local tooltipFrame = Instance.new("Frame")
        tooltipFrame.Size = UDim2.new(0, 120, 0, 25)
        tooltipFrame.BackgroundColor3 = window.Theme.Background
        tooltipFrame.Visible = false
        tooltipFrame.Parent = window.MainFrame

        local tooltipCorner = Instance.new("UICorner")
        tooltipCorner.CornerRadius = UDim.new(0, 4)
        tooltipCorner.Parent = tooltipFrame

        local tooltipLabel = Instance.new("TextLabel")
        tooltipLabel.Size = UDim2.new(1, -5, 1, -5)
        tooltipLabel.Position = UDim2.new(0, 3, 0, 3)
        tooltipLabel.BackgroundTransparency = 1
        tooltipLabel.Text = tooltip
        tooltipLabel.TextColor3 = window.Theme.Text
        tooltipLabel.TextSize = 12
        tooltipLabel.Font = Enum.Font.Code
        tooltipLabel.TextWrapped = true
        tooltipLabel.Parent = tooltipFrame

        button.MouseMoved:Connect(function(x, y)
            tooltipFrame.Position = UDim2.new(0, x - window.MainFrame.AbsolutePosition.X + 10, 0, y - window.MainFrame.AbsolutePosition.Y + 10)
            tooltipFrame.Visible = true
        end)
        button.MouseLeave:Connect(function()
            tooltipFrame.Visible = false
        end)
    end

    return button
end

-- Fonction pour créer un label
function BlitzXHub:CreateLabel(section, labelText, window)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 25)
    label.BackgroundColor3 = window.Theme.Section
    label.Text = "BlitzXHub | " .. labelText
    label.TextColor3 = window.Theme.Text
    label.TextSize = 14
    label.Font = Enum.Font.Code
    label.TextWrapped = true
    label.Parent = section.Frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = label

    return label
end

-- Fonction pour créer un slider
function BlitzXHub:CreateSlider(section, sliderName, minValue, maxValue, defaultValue, step, callback, tooltip, window)
    local slider = {}
    slider.Value = defaultValue or minValue or 0
    window.Config[sliderName] = slider.Value

    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -10, 0, 40)
    sliderFrame.BackgroundColor3 = window.Theme.Section
    sliderFrame.Parent = section.Frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = sliderFrame

    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(1, -40, 0, 20)
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Text = "BlitzXHub | " .. sliderName
    sliderLabel.TextColor3 = window.Theme.Text
    sliderLabel.TextSize = 14
    sliderLabel.Font = Enum.Font.Code
    sliderLabel.Parent = sliderFrame

    local sliderTrack = Instance.new("Frame")
    sliderTrack.Size = UDim2.new(1, -10, 0, 6)
    sliderTrack.Position = UDim2.new(0, 5, 0, 25)
    sliderTrack.BackgroundColor3 = window.Theme.Accent
    sliderTrack.Parent = sliderFrame

    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(0, 3)
    trackCorner.Parent = sliderTrack

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((slider.Value - minValue) / (maxValue - minValue), 0, 1, 0)
    sliderFill.BackgroundColor3 = window.Theme.Highlight
    sliderFill.Parent = sliderTrack

    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 3)
    fillCorner.Parent = sliderFill

    local sliderHandle = Instance.new("Frame")
    sliderHandle.Size = UDim2.new(0, 14, 0, 14)
    sliderHandle.Position = UDim2.new((slider.Value - minValue) / (maxValue - minValue), -7, 0, -4)
    sliderHandle.BackgroundColor3 = window.Theme.Text
    sliderHandle.Parent = sliderTrack

    local handleCorner = Instance.new("UICorner")
    handleCorner.CornerRadius = UDim.new(1, 0)
    handleCorner.Parent = sliderHandle

    local valueIndicator = Instance.new("TextLabel")
    valueIndicator.Size = UDim2.new(0, 40, 0, 20)
    valueIndicator.Position = UDim2.new((slider.Value - minValue) / (maxValue - minValue), -20, 0, -25)
    valueIndicator.BackgroundColor3 = window.Theme.Background
    valueIndicator.Text = tostring(slider.Value)
    valueIndicator.TextColor3 = window.Theme.Text
    valueIndicator.TextSize = 12
    valueIndicator.Font = Enum.Font.Code
    valueIndicator.Visible = false
    valueIndicator.Parent = sliderTrack

    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 4)
    indicatorCorner.Parent = valueIndicator

    local dragging = false
    sliderTrack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            valueIndicator.Visible = true
            TweenService:Create(sliderHandle, TweenInfo.new(0.2), {Size = UDim2.new(0, 16, 0, 16)}):Play()
        end
    end)

    sliderTrack.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
            valueIndicator.Visible = false
            TweenService:Create(sliderHandle, TweenInfo.new(0.2), {Size = UDim2.new(0, 14, 0, 14)}):Play()
            window.Config[sliderName] = slider.Value
            if callback then
                pcall(callback, slider.Value)
            end
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local mouseX = input.Position.X
            local trackPos = sliderTrack.AbsolutePosition.X
            local trackWidth = sliderTrack.AbsoluteSize.X
            local relativeX = math.clamp((mouseX - trackPos) / trackWidth, 0, 1)
            slider.Value = minValue + relativeX * (maxValue - minValue)
            if step then
                slider.Value = math.floor(slider.Value / step + 0.5) * step
            else
                slider.Value = math.round(slider.Value * 100) / 100
            end
            sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
            sliderHandle.Position = UDim2.new(relativeX, -7, 0, -4)
            valueIndicator.Position = UDim2.new(relativeX, -20, 0, -25)
            valueIndicator.Text = tostring(slider.Value)
            sliderLabel.Text = "BlitzXHub | " .. sliderName .. ": " .. tostring(slider.Value)
        end
    end)

    if tooltip then
        local tooltipFrame = Instance.new("Frame")
        tooltipFrame.Size = UDim2.new(0, 120, 0, 25)
        tooltipFrame.BackgroundColor3 = window.Theme.Background
        tooltipFrame.Visible = false
        tooltipFrame.Parent = window.MainFrame

        local tooltipCorner = Instance.new("UICorner")
        tooltipCorner.CornerRadius = UDim.new(0, 4)
        tooltipCorner.Parent = tooltipFrame

        local tooltipLabel = Instance.new("TextLabel")
        tooltipLabel.Size = UDim2.new(1, -5, 1, -5)
        tooltipLabel.Position = UDim2.new(0, 3, 0, 3)
        tooltipLabel.BackgroundTransparency = 1
        tooltipLabel.Text = tooltip
        tooltipLabel.TextColor3 = window.Theme.Text
        tooltipLabel.TextSize = 12
        tooltipLabel.Font = Enum.Font.Code
        tooltipLabel.TextWrapped = true
        tooltipLabel.Parent = tooltipFrame

        sliderTrack.MouseMoved:Connect(function(x, y)
            tooltipFrame.Position = UDim2.new(0, x - window.MainFrame.AbsolutePosition.X + 10, 0, y - window.MainFrame.AbsolutePosition.Y + 10)
            tooltipFrame.Visible = true
        end)
        sliderTrack.MouseLeave:Connect(function()
            tooltipFrame.Visible = false
        end)
    end

    return slider
end

-- Fonction pour créer un dropdown
function BlitzXHub:CreateDropdown(section, dropdownName, options, defaultOption, callback, tooltip, window)
    local dropdown = {}
    dropdown.Options = options or {}
    dropdown.Selected = defaultOption or options[1] or "None"
    dropdown.Open = false
    dropdown.FilteredOptions = dropdown.Options
    window.Config[dropdownName] = dropdown.Selected

    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = UDim2.new(1, -10, 0, 30)
    dropdownFrame.BackgroundColor3 = window.Theme.Section
    dropdownFrame.Parent = section.Frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = dropdownFrame

    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Size = UDim2.new(1, 0, 0, 30)
    dropdownButton.BackgroundColor3 = window.Theme.Accent
    dropdownButton.Text = "BlitzXHub | " .. dropdownName .. ": " .. dropdown.Selected
    dropdownButton.TextColor3 = window.Theme.Text
    dropdownButton.TextSize = 14
    dropdownButton.Font = Enum.Font.Code
    dropdownButton.Parent = dropdownFrame

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = dropdownButton

    local arrow = Instance.new("TextLabel")
    arrow.Size = UDim2.new(0, 20, 0, 20)
    arrow.Position = UDim2.new(1, -25, 0, 5)
    arrow.BackgroundTransparency = 1
    arrow.Text = "▼"
    arrow.TextColor3 = window.Theme.Text
    arrow.TextSize = 12
    arrow.Font = Enum.Font.Code
    arrow.Parent = dropdownButton

    local dropdownList = Instance.new("ScrollingFrame")
    dropdownList.Size = UDim2.new(1, 0, 0, 0)
    dropdownList.Position = UDim2.new(0, 0, 0, 30)
    dropdownList.BackgroundColor3 = window.Theme.Background
    dropdownList.ClipsDescendants = true
    dropdownList.Visible = false
    dropdownList.ScrollBarThickness = 3
    dropdownList.ScrollBarImageColor3 = window.Theme.Highlight
    dropdownList.CanvasSize = UDim2.new(0, 0, 0, 0)
    dropdownList.Parent = dropdownFrame

    local listCorner = Instance.new("UICorner")
    listCorner.CornerRadius = UDim.new(0, 4)
    listCorner.Parent = dropdownList

    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 2)
    listLayout.Parent = dropdownList

    local listPadding = Instance.new("UIPadding")
    listPadding.PaddingTop = UDim.new(0, 4)
    listPadding.PaddingLeft = UDim.new(0, 4)
    listPadding.PaddingRight = UDim.new(0, 4)
    listPadding.Parent = dropdownList

    local searchBox = Instance.new("TextBox")
    searchBox.Size = UDim2.new(1, -10, 0, 25)
    searchBox.BackgroundColor3 = window.Theme.Accent
    searchBox.Text = "Rechercher..."
    searchBox.TextColor3 = window.Theme.Text
    searchBox.TextSize = 12
    searchBox.Font = Enum.Font.Code
    searchBox.TextXAlignment = Enum.TextXAlignment.Left
    searchBox.ClearTextOnFocus = true
    searchBox.Parent = dropdownList

    local searchCorner = Instance.new("UICorner")
    searchCorner.CornerRadius = UDim.new(0, 4)
    searchCorner.Parent = searchBox

    local function updateDropdown()
        dropdownList.Visible = dropdown.Open
        dropdownList.Size = dropdown.Open and UDim2.new(1, 0, 0, math.min(#dropdown.FilteredOptions * 30 + 30, 150)) or UDim2.new(1, 0, 0, 0)
        dropdownList.CanvasSize = UDim2.new(0, 0, 0, #dropdown.FilteredOptions * 30 + 30)
        TweenService:Create(dropdownList, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {Size = dropdown.Open and UDim2.new(1, 0, 0, math.min(#dropdown.FilteredOptions * 30 + 30, 150)) or UDim2.new(1, 0, 0, 0)}):Play()
    end

    local function updateOptions()
        for _, child in ipairs(dropdownList:GetChildren()) do
            if child:IsA("TextButton") then
                child:Destroy()
            end
        end
        for _, option in ipairs(dropdown.FilteredOptions) do
            local optionButton = Instance.new("TextButton")
            optionButton.Size = UDim2.new(1, -10, 0, 25)
            optionButton.BackgroundColor3 = window.Theme.Accent
            optionButton.Text = option
            optionButton.TextColor3 = window.Theme.Text
            optionButton.TextSize = 12
            optionButton.Font = Enum.Font.Code
            optionButton.Parent = dropdownList

            local optionCorner = Instance.new("UICorner")
            optionCorner.CornerRadius = UDim.new(0, 4)
            optionCorner.Parent = optionButton

            optionButton.MouseButton1Click:Connect(function()
                dropdown.Selected = option
                dropdownButton.Text = "BlitzXHub | " .. dropdownName .. ": " .. option
                dropdown.Open = false
                updateDropdown()
                window.Config[dropdownName] = dropdown.Selected
                if callback then
                    pcall(callback, option)
                end
            end)

            optionButton.MouseEnter:Connect(function()
                TweenService:Create(optionButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = window.Theme.Highlight}):Play()
            end)
            optionButton.MouseLeave:Connect(function()
                TweenService:Create(optionButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = window.Theme.Accent}):Play()
            end)
        end
        updateDropdown()
    end

    searchBox:GetPropertyChangedSignal("Text"):Connect(function()
        local searchText = searchBox.Text:lower()
        dropdown.FilteredOptions = {}
        for _, option in ipairs(dropdown.Options) do
            if option:lower():find(searchText) then
                table.insert(dropdown.FilteredOptions, option)
            end
        end
        updateOptions()
    end)

    updateOptions()

    dropdownButton.MouseButton1Click:Connect(function()
        dropdown.Open = not dropdown.Open
        updateDropdown()
    end)

    if tooltip then
        local tooltipFrame = Instance.new("Frame")
        tooltipFrame.Size = UDim2.new(0, 120, 0, 25)
        tooltipFrame.BackgroundColor3 = window.Theme.Background
        tooltipFrame.Visible = false
        tooltipFrame.Parent = window.MainFrame

        local tooltipCorner = Instance.new("UICorner")
        tooltipCorner.CornerRadius = UDim.new(0, 4)
        tooltipCorner.Parent = tooltipFrame

        local tooltipLabel = Instance.new("TextLabel")
        tooltipLabel.Size = UDim2.new(1, -5, 1, -5)
        tooltipLabel.Position = UDim2.new(0, 3, 0, 3)
        tooltipLabel.BackgroundTransparency = 1
        tooltipLabel.Text = tooltip
        tooltipLabel.TextColor3 = window.Theme.Text
        tooltipLabel.TextSize = 12
        tooltipLabel.Font = Enum.Font.Code
        tooltipLabel.TextWrapped = true
        tooltipLabel.Parent = tooltipFrame

        dropdownButton.MouseMoved:Connect(function(x, y)
            tooltipFrame.Position = UDim2.new(0, x - window.MainFrame.AbsolutePosition.X + 10, 0, y - window.MainFrame.AbsolutePosition.Y + 10)
            tooltipFrame.Visible = true
        end)
        dropdownButton.MouseLeave:Connect(function()
            tooltipFrame.Visible = false
        end)
    end

    return dropdown
end

-- Fonction pour créer un keybind
function BlitzXHub:CreateKeybind(section, keybindName, defaultKey, callback, tooltip, window)
    local keybind = {}
    keybind.Key = defaultKey or Enum.KeyCode.Unknown
    keybind.Binding = false
    window.Config[keybindName] = keybind.Key.Name

    local keybindFrame = Instance.new("Frame")
    keybindFrame.Size = UDim2.new(1, -10, 0, 30)
    keybindFrame.BackgroundColor3 = window.Theme.Section
    keybindFrame.Parent = section.Frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = keybindFrame

    local keybindButton = Instance.new("TextButton")
    keybindButton.Size = UDim2.new(1, 0, 0, 30)
    keybindButton.BackgroundColor3 = window.Theme.Accent
    keybindButton.Text = "BlitzXHub | " .. keybindName .. ": " .. (keybind.Key.Name or "None")
    keybindButton.TextColor3 = window.Theme.Text
    keybindButton.TextSize = 14
    keybindButton.Font = Enum.Font.Code
    keybindButton.Parent = keybindFrame

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = keybindButton

    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 1
    stroke.Color = window.Theme.Border
    stroke.Transparency = 0.6
    stroke.Parent = keybindButton

    local connection
    keybindButton.MouseButton1Click:Connect(function()
        keybindButton.Text = "BlitzXHub | " .. keybindName .. ": Press a key..."
        keybind.Binding = true
        connection = UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Keyboard then
                keybind.Key = input.KeyCode
                keybindButton.Text = "BlitzXHub | " .. keybindName .. ": " .. input.KeyCode.Name
                keybind.Binding = false
                window.Config[keybindName] = input.KeyCode.Name
                connection:Disconnect()
            end
        end)
    end)

    UserInputService.InputBegan:Connect(function(input)
        if not keybind.Binding and input.KeyCode == keybind.Key then
            if callback then
                TweenService:Create(stroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {Transparency = 0.2}):Play()
                task.spawn(function()
                    task.wait(0.3)
                    TweenService:Create(stroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {Transparency = 0.6}):Play()
                end)
                pcall(callback)
            end
        end
    end)

    if tooltip then
        local tooltipFrame = Instance.new("Frame")
        tooltipFrame.Size = UDim2.new(0, 120, 0, 25)
        tooltipFrame.BackgroundColor3 = window.Theme.Background
        tooltipFrame.Visible = false
        tooltipFrame.Parent = window.MainFrame

        local tooltipCorner = Instance.new("UICorner")
        tooltipCorner.CornerRadius = UDim.new(0, 4)
        tooltipCorner.Parent = tooltipFrame

        local tooltipLabel = Instance.new("TextLabel")
        tooltipLabel.Size = UDim2.new(1, -5, 1, -5)
        tooltipLabel.Position = UDim2.new(0, 3, 0, 3)
        tooltipLabel.BackgroundTransparency = 1
        tooltipLabel.Text = tooltip
        tooltipLabel.TextColor3 = window.Theme.Text
        tooltipLabel.TextSize = 12
        tooltipLabel.Font = Enum.Font.Code
        tooltipLabel.TextWrapped = true
        tooltipLabel.Parent = tooltipFrame

        keybindButton.MouseMoved:Connect(function(x, y)
            tooltipFrame.Position = UDim2.new(0, x - window.MainFrame.AbsolutePosition.X + 10, 0, y - window.MainFrame.AbsolutePosition.Y + 10)
            tooltipFrame.Visible = true
        end)
        keybindButton.MouseLeave:Connect(function()
            tooltipFrame.Visible = false
        end)
    end

    return keybind
end

return BlitzXHub
